package GUI;

import Code.User;
import Code.Commands;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import resources.LocalizationUtil;
import static resources.LocalizationUtil.localizedResourceBundle;
import static Code.ClientConnection.client;
import java.io.IOException;
import javax.swing.SwingUtilities;


/**
 * This class register screen for the game, requests sent to the database
 *@author Ben Gilad and Asaf Yeshayahu
 *@version %I%
 *@see GUI.FormGame
 *@since 1.0
 */
public class FormRegister extends javax.swing.JFrame {

    /**
    * Saving this form's parent
    * @see GUI.FormLogin
    */
    FormLogin parent;
    /**
     * Used for recognizing a user
     * @see Code.User
     */
    User user;

    /**
     * Creates new form <code>formRegister</code>
     */
    public FormRegister() {
    }

    /**
     * Creates new form <code>formRegister</code> with information in it
     *
     * @param parent The parent form, used for hide/show window
     */
    public FormRegister(FormLogin parent) {
        initComponents();
        updateCaptions();
        this.setLocationRelativeTo(null); // center window
        this.parent = parent;
        this.setSize(parent.getSize());
        this.hideValidLables();
        this.addWindowListener(new myWindowListener(parent));
        this.setVisible(true);
    }
        /**
     * This method changes the <i>localization</i> and updates the 
     * text to different <i>language</i>
     */
    public void updateCaptions() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                LocalizationUtil.localizedResourceBundle = ResourceBundle.getBundle("resources.Bundle");
                btnBack.setText(localizedResourceBundle.getString("FormRegister.btnBack"));
                labUsername.setText(localizedResourceBundle.getString("FormRegister.labUsername"));
                labPassword.setText(localizedResourceBundle.getString("FormRegister.labPassword"));
                labRePass.setText(localizedResourceBundle.getString("FormRegister.labRePass"));
                btnClear.setText(localizedResourceBundle.getString("FormRegister.btnClear"));
                btnOK.setText(localizedResourceBundle.getString("FormRegister.btnOK"));
                setTitle(localizedResourceBundle.getString("FormRegister.title"));
            }
        });
    }

    /**
     * Hides the <i>labels</i> right to the text boxes. used to show the user some
     * extra information about valid input.
     */
    private void hideValidLables() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                labValidPassword.setText("");
                labValidUsername.setText("");
                labValidPasswordMatch.setText("");
            }
        });
    }

//    /**
  //   * Checks the username entered if it's already taken
  //   *
 //    * @param username The username entered
  //   * @return <code>True/False</code> Username is Taken/Free
 //    */
//    private boolean checkUsername(String username) {
//
//        for (User i : database.getUsernames()) {
//            if (i.getUsername().equals(username)) {
//                return true;
//            }
//        }
//        return false;
//    }
    
    /**
     * <i>Dialog</i> poppup used for exiting the game
     */
    public class myWindowListener extends WindowAdapter {

        FormLogin parentForm;

        /**
        * <i>Action</i> when clicked <b>button</b> before exiting game
        * @param parentForm The parent form (The previous form)
        */
        public myWindowListener(FormLogin parentForm) {
            this.parentForm = parentForm;
        }

        @Override
        public void windowClosing(WindowEvent we) {
            // ask the user a question and get his input

            int result = JOptionPane.showConfirmDialog(
                    null, //parent
                    localizedResourceBundle.getString("allForms.exitDialog"), //text
                    localizedResourceBundle.getString("allForms.titleExitDialog"), //title
                    JOptionPane.YES_NO_OPTION, //display options
                    JOptionPane.QUESTION_MESSAGE); //icon(default questionmark)
            //null; usually for an image icon
            if (result == JOptionPane.YES_OPTION) {
                parentForm.dispose(); //exit the program with no errors
                client.exit();
                dispose();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsername = new javax.swing.JTextField();
        labUsername = new javax.swing.JLabel();
        labPassword = new javax.swing.JLabel();
        labRePass = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();
        labValidPassword = new javax.swing.JLabel();
        labValidPasswordMatch = new javax.swing.JLabel();
        labValidUsername = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtPasswordMatch = new javax.swing.JPasswordField();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        labUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labUsername.setForeground(new java.awt.Color(51, 153, 255));
        labUsername.setText("Username");

        labPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labPassword.setForeground(new java.awt.Color(51, 153, 255));
        labPassword.setText("Password");

        labRePass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labRePass.setForeground(new java.awt.Color(51, 153, 255));
        labRePass.setText("Re-type Password");

        btnClear.setBackground(new java.awt.Color(255, 255, 153));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnOK.setBackground(new java.awt.Color(153, 255, 153));
        btnOK.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        labValidPassword.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        labValidPassword.setForeground(new java.awt.Color(255, 0, 0));
        labValidPassword.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labValidPassword.setText("valid");
        labValidPassword.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        labValidPasswordMatch.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        labValidPasswordMatch.setForeground(new java.awt.Color(255, 0, 0));
        labValidPasswordMatch.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labValidPasswordMatch.setText("valid");
        labValidPasswordMatch.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        labValidUsername.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        labValidUsername.setForeground(new java.awt.Color(255, 0, 0));
        labValidUsername.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labValidUsername.setText("valid");
        labValidUsername.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        btnBack.setBackground(new java.awt.Color(255, 153, 153));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labRePass, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labUsername)
                            .addComponent(labPassword))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPasswordMatch, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labValidPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labValidPasswordMatch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(180, 180, 180))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labValidUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labValidPassword, labValidUsername});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labUsername)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(labPassword))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(labRePass))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labValidUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labValidPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labValidPasswordMatch, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPasswordMatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(113, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {labValidUsername, txtPassword, txtPasswordMatch, txtUsername});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed
/**
 *  <i>Action</i> used for checking validation of user and password
 * Updates the <b>GUI</b>
 * @param evt 
 */
    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override

            public void run() {
                boolean valid = true;

                if (txtUsername.getText().matches("\\w{6,20}") == false) {
                    labValidUsername.setText(localizedResourceBundle.getString(
                            "formRegister.btnOKActionPerformed.validUsername"));
                    valid = false;
                }

                if (txtPassword.getText().matches("\\w{6,20}") == false) {
                    labValidPassword.setText(localizedResourceBundle.getString(
                            "formRegister.btnOKActionPerformed.validPassword"));
                    valid = false;
                }

                //if password do not match
                if (!txtPassword.getText().equals(txtPasswordMatch.getText())) {
                    labValidPasswordMatch.setText(localizedResourceBundle.getString(
                            "formRegister.btnOKActionPerformed.noMatchPasswords"));
                    valid = false;
                }

                if (valid == true) {
                    try {
                        //            user = new User(txtUsername.getText(), txtPassword.getText());
//            database.getUsernames().add(user);
                        User user = new User(
                                txtUsername.getText(), txtPassword.getText());

                        if(client.out == null){
                            client.startConnection();
                        }
                        
                        //send the details
                        client.out.writeObject(Commands.REGISTER);
                        client.out.writeObject(user);

                        //check the user
                        Commands result = (Commands) client.in.readObject();

                        //if user is available and there were no errors
                        FormLobby f1;

                        switch (result) {
                            case ALREADY_EXISTS:
                                JOptionPane.showMessageDialog(
                                        null,
                                        localizedResourceBundle.getString(
                                                "formLogin.btnLoginActionPerformed.userAlreadyExists"));
                                break;
                            case CONNECTION_ERROR:
                                JOptionPane.showMessageDialog(
                                        null,
                                        localizedResourceBundle.getString("allForms.error"));
                                break;

                            //if the user doesn't exist we can register the new user
                            case REGISTER:
                                user = (User) client.in.readObject();
                                setVisible(false);
                                f1 = new FormLobby(user);
                                dispose();
                                return;
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    } catch (ClassNotFoundException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });
    }//GEN-LAST:event_btnOKActionPerformed
    /**
     * <i>Action</i> for clearing text fields in <b>GUI</b>
     * @param evt
     */
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        this.txtPassword.setText("");
        this.txtUsername.setText("");
        this.txtPasswordMatch.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing
    /**
     * <i>Action</i> for going back to login
     * @see GUI.FormLogin
     * @param evt
     */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
        this.dispose();
        FormLogin l = new FormLogin();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRegister().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel labPassword;
    private javax.swing.JLabel labRePass;
    private javax.swing.JLabel labUsername;
    private javax.swing.JLabel labValidPassword;
    private javax.swing.JLabel labValidPasswordMatch;
    private javax.swing.JLabel labValidUsername;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordMatch;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
